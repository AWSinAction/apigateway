service: aws-nodejs
provider: aws
runtime: nodejs4.3

functions:
  getUsers:
    handler: handler.getUsers
    events:
    - http:
        path: user
        method: GET
  postUser:
    handler: handler.postUser
    events:
    - http:
        path: user
        method: POST
  getUser:
    handler: handler.getUser
    events:
    - http:
        path: user/{userId}
        method: GET
  deleteUser:
    handler: handler.deleteUser
    events:
    - http:
        path: user/{userId}
        method: DELETE
  getTasks:
    handler: handler.getTasks
    events:
    - http:
        path: user/{userId}/task
        method: GET
  postTask:
    handler: handler.postTask
    events:
    - http:
        path: user/{userId}/task
        method: POST
  putTask:
    handler: handler.putTask
    events:
    - http:
        path: user/{userId}/task/{taskId}
        method: PUT
  deleteTask:
    handler: handler.deleteTask
    events:
    - http:
        path: user/{userId}/task/{taskId}
        method: DELETE
  getTasksByCategory:
    handler: handler.getTasksByCategory
    events:
    - http:
        path: category/{category}/task
        method: GET

resources:
  Resources:
    IamPolicyLambdaDynamo:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: dev-com-sb-actionboard-auth-dynamodb
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:Scan
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:UpdateItem
            Resource:
            - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/todo-user*"]]
            - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/todo-task*"]]
        Roles:
        - "Ref": "IamRoleLambda"
    UserTable: 
      Type: "AWS::DynamoDB::Table"
      Properties: 
        AttributeDefinitions: 
        - AttributeName: "uid"
          AttributeType: "S"
        KeySchema: 
        - AttributeName: "uid"
          KeyType: "HASH"
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "todo-user"
    TaskTable: 
      Type: "AWS::DynamoDB::Table"
      Properties: 
        AttributeDefinitions: 
        - AttributeName: "uid"
          AttributeType: "S"
        - AttributeName: "tid"
          AttributeType: "N"
        - AttributeName: "category"
          AttributeType: "S"
        KeySchema: 
        - AttributeName: "uid"
          KeyType: "HASH"
        - AttributeName: "tid"
          KeyType: "RANGE"
        GlobalSecondaryIndexes: 
        - IndexName: "category-index"
          KeySchema: 
          - AttributeName: "category"
            KeyType: "HASH"
          - AttributeName: "tid"
            KeyType: "RANGE"
          Projection: 
            ProjectionType: "ALL"
          ProvisionedThroughput: 
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "todo-task"
