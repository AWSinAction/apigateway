{
  "swagger": "2.0",
  "info": {
    "title": "API Gateway ToDo",
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/user": {
      "get": {
        "responses": {
          "200": {
            "description": "users retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            },
            "headers": {
              "Link":  {
                "description": "contains the link to the next page",
                "type": "string"
              }
            }
          }
        },
        "parameters": [{
          "name": "limit",
          "in": "query",
          "description": "result limit",
          "default": "10",
          "type": "integer"
        }, {
          "name": "next",
          "in": "query",
          "description": "use the Link header to get the next page",
          "type": "string"
        }],
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"getUsers\", \"parameters\": {\"limit\": \"$input.params('limit')\", \"next\": \"$input.params('next')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Link": "'TODO'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$.body')"
              }
            } 
          }
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "user created",
            "headers": {
              "Location": {
                "description": "links to the newly created user",
                "type": "string"
              }
            }
          }
        },
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "body object",
          "required": true,
          "schema": {
            "$ref":"#/definitions/CreateUser"
          }
        }],
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"postUser\", \"body\": $input.json('$')}"
          },
          "responses": {
            "default": {
              "statusCode": "201",
              "responseParameters": {
                "method.response.header.Location": "'TODO'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$.body')"
              }
            } 
          }
        }
      } 
    },
    "/user/{userId}": {
      "parameters": [{
        "name": "userId",
        "in": "path",
        "description": "ID of user",
        "required": true,
        "default": "",
        "type": "string"
      }],
      "get": {
        "responses": {
          "200": {
            "description": "user retrieved",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"getUser\", \"parameters\": {\"userId\": \"$input.params('userId')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseTemplates": {
                "application/json": "$input.json('$.body')"
              }
            } 
          }
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "user deleted"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"deleteUser\", \"parameters\": {\"userId\": \"$input.params('userId')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "204",
              "responseTemplates": {
                "application/json": "{}"
              }
            } 
          }
        }
      }
    },
    "/user/{userId}/task": {
      "parameters": [{
        "name": "userId",
        "in": "path",
        "description": "ID of user",
        "required": true,
        "default": "",
        "type": "string"
      }],
      "get": {
        "responses": {
          "200": {
            "description": "tasks retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            },
            "headers": {
              "Link":  {
                "description": "contains the link to the next page",
                "type": "string"
              }
            }
          }
        },
        "parameters": [{
          "name": "limit",
          "in": "query",
          "description": "result limit",
          "default": "10",
          "type": "integer"
        }, {
          "name": "next",
          "in": "query",
          "description": "use the Link header to get the next page",
          "type": "string"
        }, {
          "name": "overdue",
          "in": "query",
          "description": "include overdue tasks",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "due",
          "in": "query",
          "description": "include due tasks",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "withoutdue",
          "in": "query",
          "description": "include tasks without due",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "futuredue",
          "in": "query",
          "description": "include future due tasks",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "dueafter",
          "in": "query",
          "description": "include tasks due after yyyymmdd",
          "type": "integer"
        }, {
          "name": "duebefore",
          "in": "query",
          "description": "include tasks due before yyyymmdd",
          "type": "integer"
        }, {
          "name": "category",
          "in": "query",
          "description": "include tasks with category",
          "type": "string"
        }],
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"getTasks\", \"parameters\": {\"userId\": \"$input.params('userId')\", \"limit\": \"$input.params('limit')\", \"next\": \"$input.params('next')\", \"overdue\": \"$input.params('overdue')\", \"due\": \"$input.params('due')\", \"withoutdue\": \"$input.params('withoutdue')\", \"futuredue\": \"$input.params('futuredue')\", \"dueafter\": \"$input.params('dueafter')\", \"duebefore\": \"$input.params('duebefore')\", \"category\": \"$input.params('category')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Link": "'TODO'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$.body')"
              }
            } 
          }
        }
      },
      "post": {
        "responses": {
          "201": {
            "description": "task created",
            "headers": {
              "Location": {
                "description": "links to the newly created task",
                "type": "string"
              }
            }
          }
        },
        "parameters": [{
          "name": "body",
          "in": "body",
          "description": "body object",
          "required": true,
          "schema": {
            "$ref":"#/definitions/CreateTask"
          }
        }],
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"postTask\", \"body\": $input.json('$'), \"parameters\": {\"userId\": \"$input.params('userId')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "201",
              "responseParameters": {
                "method.response.header.Location": "'TODO'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$.body')"
              }
            } 
          }
        }
      }
    },
    "/user/{userId}/task/{taskId}": {
      "parameters": [{
        "name": "userId",
        "in": "path",
        "description": "ID of user",
        "required": true,
        "default": "",
        "type": "string"
      }, {
        "name": "taskId",
        "in": "path",
        "description": "ID of task",
        "required": true,
        "default": "",
        "type": "string"
      }],
      "put": {
        "responses": {
          "204": {
            "description": "task done"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"putTask\", \"parameters\": {\"userId\": \"$input.params('userId')\", \"taskId\": \"$input.params('taskId')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "204",
              "responseTemplates": {
                "application/json": "{}"
              }
            } 
          }
        }
      },
      "delete": {
        "responses": {
          "204": {
            "description": "task deleted"
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"deleteTask\", \"body\": $input.json('$'), \"parameters\": {\"userId\": \"$input.params('userId')\", \"taskId\": \"$input.params('taskId')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "204",
              "responseTemplates": {
                "application/json": "{}"
              }
            } 
          }
        }
      }
    },
    "/category/{category}/task": {
      "parameters": [{
        "name": "category",
        "in": "path",
        "description": "category",
        "required": true,
        "default": "",
        "type": "string"
      }],
      "get": {
        "responses": {
          "200": {
            "description": "tasks retrieved",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            },
            "headers": {
              "Link":  {
                "description": "contains the link to the next page",
                "type": "string"
              }
            }
          }
        },
        "parameters": [{
          "name": "limit",
          "in": "query",
          "description": "result limit",
          "default": "10",
          "type": "integer"
        }, {
          "name": "next",
          "in": "query",
          "description": "use the Link header to get the next page",
          "type": "string"
        }, {
          "name": "overdue",
          "in": "query",
          "description": "include overdue tasks",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "due",
          "in": "query",
          "description": "include due tasks",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "withoutdue",
          "in": "query",
          "description": "include tasks without due",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "futuredue",
          "in": "query",
          "description": "include future due tasks",
          "type": "boolean",
          "allowEmptyValue": true
        }, {
          "name": "dueafter",
          "in": "query",
          "description": "include tasks due after yyyymmdd",
          "type": "integer"
        }, {
          "name": "duebefore",
          "in": "query",
          "description": "include tasks due before yyyymmdd",
          "type": "integer"
        }],
        "x-amazon-apigateway-integration": {
          "type": "aws",
          "uri": "arn:aws:apigateway:$AWSRegion:lambda:path/2015-03-31/functions/$LambdaArn/invocations",
          "httpMethod": "POST",
          "requestTemplates": {
            "application/json": "{\"fun\": \"getTasksByCategory\", \"parameters\": {\"category\": \"$input.params('category')\", \"limit\": \"$input.params('limit')\", \"next\": \"$input.params('next')\", \"overdue\": \"$input.params('overdue')\", \"due\": \"$input.params('due')\", \"withoutdue\": \"$input.params('withoutdue')\", \"futuredue\": \"$input.params('futuredue')\", \"dueafter\": \"$input.params('dueafter')\", \"duebefore\": \"$input.params('duebefore')\"}}"
          },
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Link": "'TODO'"
              },
              "responseTemplates": {
                "application/json": "$input.json('$.body')"
              }
            } 
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tid": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "created": {
          "type": "integer"
        },
        "due": {
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "completed": {
          "type": "integer"
        }
      },
      "required": ["tid", "description", "created"]
    },
    "CreateTask": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "description": {
          "type": "string"
        },
        "due": {
          "type": "integer"
        },
        "category": {
          "type": "string"
        }
      },
      "required": ["description"]
    },
    "User": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "uid": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "required": ["uid", "email", "phone"]
    },
    "CreateUser": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "required": ["email", "phone"]
    }
  }
}